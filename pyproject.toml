[tool.poetry]
name = "django-centralauth"
version = "2.0.0"
description = "App for managing user access and permissions from multiple projects."
authors = [
	"Magdalena Rother <rother.magdalena@gmail.com>",
]
license = "MIT"
readme = "README.rst"
homepage = 'https://github.com/lenarother/django-centralauth'
repository = 'https://github.com/lenarother/django-centralauth'
classifiers = [
	"Development Status :: 5 - Production/Stable",
	"License :: OSI Approved :: MIT License",
	"Environment :: Web Environment",
	"Framework :: Django",
	"Intended Audience :: Developers",
	"Operating System :: Unix",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3",
]
packages = [{ include = "centralauth" }]
include = ["LICENSE.rst"]

[tool.poetry.dependencies]
python = ">=3.6,<4"
importlib-metadata = {version = "*", python = "<3.8"}

Django = ">=2.2"
Sphinx = {version = ">=3.5", optional = true}

requests = ">=2.25"
requests-oauthlib = ">=1.3"
django-oauth-toolkit = ">=1.5"

[tool.poetry.dev-dependencies]
pytest = ">=6.2"
pytest-cov = ">=2.11"
pytest-django = ">=4.2"
pytest-flake8 = ">=1.0"
pytest-isort = ">=2.0"
pytest-black = ">=0.3"
pytest-snapshot = ">=0.6"
factory-boy = ">=3.2"
coverage = {version = ">=5.5", extras = ["toml"]}

[tool.poetry.extras]
docs = ["Sphinx"]

[build-system]
requires = ["poetry>=1.1"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
addopts = "-v --tb=short --nomigrations"
testpaths = ["centralauth", "tests"]
flake8-max-line-length = 96
flake8-ignore = ["E203", "E266", "E501", "W503"]
flake8-max-complexity = 18
DJANGO_SETTINGS_MODULE = "tests.settings"

[tool.black]
line-length = 96
skip-string-normalization = true
skip-numeric-underscore-normalization = true
include = "\\.pyi?$"
exclude = "/(\\.git|\\.tox|build|dist|migrations)/"

[tool.isort]
profile = "hug"
src_paths = ["centralauth", "tests"]
skip_glob = ["*/migrations/*.py"]
lines_after_imports = 2

[tool.coverage.run]
branch = true
source = ["centralauth"]
omit = ["*/__init__.py", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = ["raise NotImplementedError"]
